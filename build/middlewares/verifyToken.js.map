{"version":3,"sources":["../../server/middlewares/verifyToken.js"],"names":["verifyToken","req","res","next","token","header","status","json","message","verified","jwt","verify","process","env","TOKEN_SECRET_KEY","user","error"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAd;AACA,MAAI,CAACD,KAAL,EACE,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,OAAO,EAAE;AADiB,GAArB,CAAP;;AAGF,MAAI;AACF,QAAMC,QAAQ,GAAGC,yBAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,gBAA9B,CAAjB;;AACAb,IAAAA,GAAG,CAACc,IAAJ,GAAWN,QAAX;AACAN,IAAAA,IAAI;AACL,GAJD,CAIE,OAAOa,KAAP,EAAc;AACdd,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBS,MAAAA,KAAK,EAAE;AADY,KAArB;AAGD;AACF,CAfD;;eAiBehB,W","sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\nconst verifyToken = (req, res, next) => {\r\n  const token = req.header(\"auth-token\");\r\n  if (!token)\r\n    return res.status(401).json({\r\n      message: \"access denied\",\r\n    });\r\n  try {\r\n    const verified = jwt.verify(token, process.env.TOKEN_SECRET_KEY);\r\n    req.user = verified;\r\n    next();\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      error: \"invalid token\",\r\n    });\r\n  }\r\n};\r\n\r\nexport default verifyToken;\r\n"],"file":"verifyToken.js"}