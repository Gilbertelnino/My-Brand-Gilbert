{"version":3,"sources":["../../../server/tests/article/authToken.spec.js"],"names":["expect","chai","use","chaiHttp","TokenValidationTest","it","done","Article","deleteMany","server","close","request","post","set","ArticleValues","noTokenProvided","send","validArticle","end","err","res","to","be","have","status","invalidToken"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCC,EAAAA,EAAE,CAAC,2CAAD,EAA8C,UAACC,IAAD,EAAU;AACxD,gGAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFC,oBAAQC,UAAR,CAAmB,EAAnB,CADE;;AAAA;AAERC,gCAAOC,KAAP;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAIAT,qBACGU,OADH,CACWF,iBADX,EAEGG,IAFH,CAEQ,sBAFR,EAGGC,GAHH,CAGOC,oBAAcC,eAHrB,EAIGC,IAJH,CAIQF,oBAAcG,YAJtB,EAKGC,GALH,CAKO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBpB,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf,UAAwBtB,MAAM,CAACoB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B,CAAxB;AACAlB,MAAAA,IAAI;AACL,KARH;AASD,GAdC,CAAF;AAeAD,EAAAA,EAAE,CAAC,uCAAD,EAA0C,UAACC,IAAD,EAAU;AACpDL,qBACGU,OADH,CACWF,iBADX,EAEGG,IAFH,CAEQ,sBAFR,EAGGC,GAHH,CAGOC,oBAAcW,YAHrB,EAIGT,IAJH,CAIQF,oBAAcG,YAJtB,EAKGC,GALH,CAKO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBpB,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAtB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAlB,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF,CAhBgC,CA4BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzCD;;eA0CeF,mB","sourcesContent":["import chai from \"chai\";\r\nimport { afterEach } from \"mocha\";\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport ArticleValues from \"../asset/article\";\r\nimport Article from \"../../models/Article\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst TokenValidationTest = () => {\r\n  it(\"should return 401 if no token is provided\", (done) => {\r\n    afterEach(async () => {\r\n      await Article.deleteMany({});\r\n      server.close();\r\n    });\r\n    chai\r\n      .request(server)\r\n      .post(\"/api/articles/create\")\r\n      .set(ArticleValues.noTokenProvided)\r\n      .send(ArticleValues.validArticle)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null, expect(res).to.have.status(401);\r\n        done();\r\n      });\r\n  });\r\n  it(\"should return 400 if token it invalid\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .post(\"/api/articles/create\")\r\n      .set(ArticleValues.invalidToken)\r\n      .send(ArticleValues.validArticle)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n  // it(\"should return 200 if token it valid\", (done) => {\r\n  //   chai\r\n  //     .request(server)\r\n  //     .post(\"/api/articles/create\")\r\n  //     .set(ArticleValues.validToken)\r\n  //     .send(ArticleValues.validArticle)\r\n  //     .end((err, res) => {\r\n  //       expect(err).to.be.null;\r\n  //       expect(res).to.have.status(200);\r\n  //       expect(res.header).to.have.property(\"auth-token\");\r\n  //       done();\r\n  //     });\r\n  // });\r\n};\r\nexport default TokenValidationTest;\r\n"],"file":"authToken.spec.js"}