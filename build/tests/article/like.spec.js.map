{"version":3,"sources":["../../../server/tests/article/like.spec.js"],"names":["expect","chai","use","chaiHttp","addLike","Article","deleteMany","it","done","request","server","patch","end","err","res","to","be","have","status","body","property","article","ArticleValues","validArticle","save","_id"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB;AACA;AACA;AACA,8FAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,oBAAQC,UAAR,CAAmB,EAAnB,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAIAC,EAAAA,EAAE,CAAC,iDAAD,EAAoD,UAACC,IAAD,EAAU;AAC9DP,qBACGQ,OADH,CACWC,iBADX,EAEGC,KAFH,CAES,uBAFT,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBd,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAhB,MAAAA,MAAM,CAACc,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAlB,MAAAA,MAAM,CAACc,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,OAAlC,EAA2C,WAA3C;AACAZ,MAAAA,IAAI;AACL,KARH;AASD,GAVC,CAAF;AAWAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5D,QAAMa,OAAO,GAAG,IAAIhB,mBAAJ,CAAYiB,oBAAcC,YAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAvB,qBACGQ,OADH,CACWC,iBADX,EAEGC,KAFH,+BAEgCU,OAAO,CAACI,GAFxC,QAGGb,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBd,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAhB,MAAAA,MAAM,CAACc,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAlB,MAAAA,MAAM,CAACc,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CACE,SADF,EAEE,0BAFF;AAIAZ,MAAAA,IAAI;AACL,KAXH;AAYD,GAfC,CAAF;AAgBD,CAnCD;;eAqCeJ,O","sourcesContent":["import chai from \"chai\";\r\nimport { beforeEach, afterEach } from \"mocha\";\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport Article from \"../../models/Article\";\r\nimport ArticleValues from \"../asset/article\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst addLike = () => {\r\n  // beforeEach(async () => {\r\n  //   await Article.deleteMany({});\r\n  // });\r\n  afterEach(async () => {\r\n    await Article.deleteMany({});\r\n  });\r\n\r\n  it(\"should not be able to add like if id is invalid\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .patch(\"/api/articles/likes/1\")\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(404);\r\n        expect(res.body).to.have.property(\"error\", \"Not Found\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should be able to like article if it is found\", (done) => {\r\n    const article = new Article(ArticleValues.validArticle);\r\n    article.save();\r\n    chai\r\n      .request(server)\r\n      .patch(`/api/articles/likes/${article._id} `)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(201);\r\n        expect(res.body).to.have.property(\r\n          \"message\",\r\n          \"Like added successfully!\"\r\n        );\r\n        done();\r\n      });\r\n  });\r\n};\r\n\r\nexport default addLike;\r\n"],"file":"like.spec.js"}