{"version":3,"sources":["../../../server/tests/article/deleteArticle.spec.js"],"names":["expect","chai","use","chaiHttp","deleteArticle","Article","deleteMany","it","done","article","ArticleValues","validArticle","save","request","server","_id","set","noTokenProvided","end","err","res","to","be","have","status","body","property","validToken"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B;AACA;AACA;AACA,8FAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,oBAAQC,UAAR,CAAmB,EAAnB,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAGAC,EAAAA,EAAE,CAAC,iEAAD,EAAoE,UAACC,IAAD,EAAU;AAC9E,QAAMC,OAAO,GAAG,IAAIJ,mBAAJ,CAAYK,oBAAcC,YAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAX,qBACGY,OADH,CACWC,iBADX,YAEU,mBAAmBL,OAAO,CAACM,GAFrC,EAGGC,GAHH,CAGON,oBAAcO,eAHrB,EAIGC,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBpB,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAtB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAxB,MAAAA,MAAM,CAACoB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,SAAlC,EAA6C,eAA7C;AACAlB,MAAAA,IAAI;AACL,KATH;AAUD,GAbC,CAAF;AAcAD,EAAAA,EAAE,CAAC,uEAAD,EAA0E,UAACC,IAAD,EAAU;AACpFP,qBACGY,OADH,CACWC,iBADX,YAEU,iBAFV,EAGGE,GAHH,CAGON,oBAAciB,UAHrB,EAIGT,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBpB,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAtB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAxB,MAAAA,MAAM,CAACoB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,OAAlC,EAA2C,WAA3C;AACAlB,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF;AAYAD,EAAAA,EAAE,CAAC,iDAAD,EAAoD,UAACC,IAAD,EAAU;AAC9D,QAAMC,OAAO,GAAG,IAAIJ,mBAAJ,CAAYK,oBAAcC,YAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAX,qBACGY,OADH,CACWC,iBADX,YAEU,mBAAmBL,OAAO,CAACM,GAFrC,EAGGC,GAHH,CAGON,oBAAciB,UAHrB,EAIGT,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBpB,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAtB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAxB,MAAAA,MAAM,CAACoB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CACE,SADF,EAEE,2BAFF;AAIAlB,MAAAA,IAAI;AACL,KAZH;AAaD,GAhBC,CAAF;AAiBD,CAlDD;;eAoDeJ,a","sourcesContent":["import chai from \"chai\";\r\nimport { beforeEach, afterEach } from \"mocha\";\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport Article from \"../../models/Article\";\r\nimport ArticleValues from \"../asset/article\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst deleteArticle = () => {\r\n  // beforeEach(async () => {\r\n  //   await Article.deleteMany({});\r\n  // });\r\n  afterEach(async () => {\r\n    await Article.deleteMany({});\r\n  });\r\n  it(\"should not able to delete article if there is no token provided\", (done) => {\r\n    const article = new Article(ArticleValues.validArticle);\r\n    article.save();\r\n    chai\r\n      .request(server)\r\n      .delete(\"/api/articles/\" + article._id)\r\n      .set(ArticleValues.noTokenProvided)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.have.property(\"message\", \"access denied\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should not be able to delete article if id is invalid or id not found\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .delete(\"/api/articles/1\")\r\n      .set(ArticleValues.validToken)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(404);\r\n        expect(res.body).to.have.property(\"error\", \"Not Found\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should be able to delete article if it is found\", (done) => {\r\n    const article = new Article(ArticleValues.validArticle);\r\n    article.save();\r\n    chai\r\n      .request(server)\r\n      .delete(\"/api/articles/\" + article._id)\r\n      .set(ArticleValues.validToken)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.have.property(\r\n          \"message\",\r\n          \"post deleted successfully\"\r\n        );\r\n        done();\r\n      });\r\n  });\r\n};\r\n\r\nexport default deleteArticle;\r\n"],"file":"deleteArticle.spec.js"}