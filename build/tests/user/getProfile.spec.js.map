{"version":3,"sources":["../../../server/tests/user/getProfile.spec.js"],"names":["expect","chai","use","chaiHttp","getProfile","it","done","request","server","get","end","err","res","to","be","have","status","body","property","Profile","collection","insertOne","firstName","lastName","email","password","gender","jobRole","department","address"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,EAAAA,EAAE,CAAC,iDAAD,EAAoD,UAACC,IAAD,EAAU;AAC9DL,qBACGM,OADH,CACWC,iBADX,EAEGC,GAFH,CAEO,cAFP,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBZ,MAAAA,MAAM,CAACW,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAd,MAAAA,MAAM,CAACY,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAhB,MAAAA,MAAM,CAACY,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,OAAlC,EAA2C,iBAA3C;AACAZ,MAAAA,IAAI;AACL,KARH;AASD,GAVC,CAAF;AAYAD,EAAAA,EAAE,CAAC,0CAAD,EAA6C,UAACC,IAAD,EAAU;AACvDa,wBAAQC,UAAR,CAAmBC,SAAnB,CAA6B;AAC3BC,MAAAA,SAAS,EAAE,WADgB;AAE3BC,MAAAA,QAAQ,EAAE,SAFiB;AAG3BC,MAAAA,KAAK,EAAE,yBAHoB;AAI3BC,MAAAA,QAAQ,EAAE,SAJiB;AAK3BC,MAAAA,MAAM,EAAE,MALmB;AAM3BC,MAAAA,OAAO,EAAE,+BANkB;AAO3BC,MAAAA,UAAU,EAAE,oBAPe;AAQ3BC,MAAAA,OAAO,EAAE;AARkB,KAA7B;;AAUA5B,qBACGM,OADH,CACWC,iBADX,EAEGC,GAFH,CAEO,cAFP,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBZ,MAAAA,MAAM,CAACW,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAd,MAAAA,MAAM,CAACY,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAhB,MAAAA,MAAM,CAACY,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CACE,SADF,EAEE,8BAFF;AAIAZ,MAAAA,IAAI;AACL,KAXH;AAYD,GAvBC,CAAF;AAwBD,CArCD;;eAuCeF,U","sourcesContent":["import chai from \"chai\";\r\nimport { afterEach } from \"mocha\";\r\n\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport Profile from \"../../models/Profile\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst getProfile = () => {\r\n  it(\"should return 404 status if there is no profile\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .get(\"/api/profile\")\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(404);\r\n        expect(res.body).to.have.property(\"error\", \"No profile Yet!\");\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"should return profile if it is available\", (done) => {\r\n    Profile.collection.insertOne({\r\n      firstName: \"Ndatimana\",\r\n      lastName: \"Gilbert\",\r\n      email: \"gilbeltelnino@gmail.com\",\r\n      password: \"1234567\",\r\n      gender: \"male\",\r\n      jobRole: \"full stack software developer\",\r\n      department: \"software developer\",\r\n      address: \"KN 76 St\",\r\n    });\r\n    chai\r\n      .request(server)\r\n      .get(\"/api/profile\")\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.have.property(\r\n          \"message\",\r\n          \"Profile fetched successfully\"\r\n        );\r\n        done();\r\n      });\r\n  });\r\n};\r\n\r\nexport default getProfile;\r\n"],"file":"getProfile.spec.js"}