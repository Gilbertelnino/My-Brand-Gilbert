{"version":3,"sources":["../../../server/tests/user/signin.spec.js"],"names":["expect","chai","use","chaiHttp","signin","it","done","request","server","post","send","userValue","missingSigninField","end","err","res","to","be","have","status","invalidUser","body","property"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBC,EAAAA,EAAE,CAAC,gFAAD,EAAmF,UAACC,IAAD,EAAU;AAC7FL,qBACGM,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,YAFR,EAGGC,IAHH,CAGQC,qBAAUC,kBAHlB,EAIGC,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,MAAAA,MAAM,CAACc,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAjB,MAAAA,MAAM,CAACe,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AAEAb,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF;AAYAD,EAAAA,EAAE,CAAC,0DAAD,EAA6D,UAACC,IAAD,EAAU;AACvEL,qBACGM,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,YAFR,EAGGC,IAHH,CAGQC,qBAAUS,WAHlB,EAIGP,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,MAAAA,MAAM,CAACc,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAjB,MAAAA,MAAM,CAACe,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAnB,MAAAA,MAAM,CAACe,GAAG,CAACM,IAAL,CAAN,CAAiBL,EAAjB,CAAoBE,IAApB,CAAyBI,QAAzB,CAAkC,OAAlC,EAA2C,2BAA3C;AACAhB,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF,CAbmB,CAyBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA3CD;;eA6CeF,M","sourcesContent":["import chai from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport userValue from \"../asset/userData\";\r\nimport User from \"../../models/User\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst signin = () => {\r\n  it(\"User Should not be able to logged in if there is no email or password provided\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .post(\"/api/login\")\r\n      .send(userValue.missingSigninField)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(400);\r\n\r\n        done();\r\n      });\r\n  });\r\n  it(\"User should not be able to login if it is not registered\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .post(\"/api/login\")\r\n      .send(userValue.invalidUser)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.have.property(\"error\", \"Invalid Email or Password\");\r\n        done();\r\n      });\r\n  });\r\n  // it(\"User should be able to Logged in if email and password exist\", (done) => {\r\n  //   const user = new User(userValue.allowedSignin);\r\n  //   user.save();\r\n  //   chai\r\n  //     .request(server)\r\n  //     .post(\"/api/login\")\r\n  //     .send(user)\r\n  //     .end((err, res) => {\r\n  //       expect(err).to.be.null;\r\n  //       expect(res).to.have.status(200);\r\n  //       expect(res.body).to.have.property(\r\n  //         \"message\",\r\n  //         \"User Logged in successfully\"\r\n  //       );\r\n  //       expect(res.header).to.have.property(\"auth-token\");\r\n  //       done();\r\n  //     });\r\n  // });\r\n};\r\n\r\nexport default signin;\r\n"],"file":"signin.spec.js"}