{"version":3,"sources":["../../../server/tests/user/updateProfile.spec.js"],"names":["expect","chai","use","chaiHttp","updateProfile","Profile","deleteMany","it","done","profile","ProfileValues","validProfile","save","request","server","patch","_id","set","VerifiedToken","noTokenProvided","end","err","res","to","be","have","status","body","property","validToken"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,+FAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,oBAAQC,UAAR,CAAmB,EAAnB,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;AAGA,8FAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFD,oBAAQC,UAAR,CAAmB,EAAnB,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAGAC,EAAAA,EAAE,CAAC,iEAAD,EAAoE,UAACC,IAAD,EAAU;AAC9E,QAAMC,OAAO,GAAG,IAAIJ,mBAAJ,CAAYK,qBAAcC,YAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAX,qBACGY,OADH,CACWC,iBADX,EAEGC,KAFH,6BAE8BN,OAAO,CAACO,GAFtC,GAGGC,GAHH,CAGOC,oBAAcC,eAHrB,EAIGC,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBtB,MAAAA,MAAM,CAACqB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAxB,MAAAA,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA1B,MAAAA,MAAM,CAACsB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,SAAlC,EAA6C,eAA7C;AACApB,MAAAA,IAAI;AACL,KATH;AAUD,GAbC,CAAF;AAcAD,EAAAA,EAAE,CAAC,uDAAD,EAA0D,UAACC,IAAD,EAAU;AACpEP,qBACGY,OADH,CACWC,iBADX,EAEGC,KAFH,CAES,qBAFT,EAGGE,GAHH,CAGOC,oBAAcW,UAHrB,EAIGT,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBtB,MAAAA,MAAM,CAACqB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAxB,MAAAA,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAlB,MAAAA,IAAI;AACL,KARH;AASD,GAVC,CAAF,CArB0B,CAgC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAlDD;;eAoDeJ,a","sourcesContent":["import chai from \"chai\";\r\nimport { beforeEach, afterEach } from \"mocha\";\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport Profile from \"../../models/Profile\";\r\nimport ProfileValues from \"../asset/userData\";\r\nimport VerifiedToken from \"../asset/article\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst updateProfile = () => {\r\n  beforeEach(async () => {\r\n    await Profile.deleteMany({});\r\n  });\r\n  afterEach(async () => {\r\n    await Profile.deleteMany({});\r\n  });\r\n  it(\"should not able to update profile if there is no token provided\", (done) => {\r\n    const profile = new Profile(ProfileValues.validProfile);\r\n    profile.save();\r\n    chai\r\n      .request(server)\r\n      .patch(`/api/profile/edit/${profile._id}`)\r\n      .set(VerifiedToken.noTokenProvided)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.have.property(\"message\", \"access denied\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should not be able to update profile if id is invalid\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .patch(\"/api/profile/edit/1\")\r\n      .set(VerifiedToken.validToken)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(404);\r\n        done();\r\n      });\r\n  });\r\n  // it(\"should be able to update profile if it is found\", (done) => {\r\n  //   const profile = new Profile(ProfileValues.validProfile);\r\n  //   profile.save();\r\n  //   chai\r\n  //     .request(server)\r\n  //     .patch(`/api/profile/edit/${profile._id}`)\r\n  //     .set(VerifiedToken.validToken)\r\n  //     .send({ firstName: \"Robert\" })\r\n  //     .end((err, res) => {\r\n  //       expect(err).to.be.null;\r\n  //       expect(res).to.have.status(200);\r\n  //       expect(res.body).to.have.property(\r\n  //         \"message\",\r\n  //         \"profile updated successfully\"\r\n  //       );\r\n  //       done();\r\n  //     });\r\n  // });\r\n};\r\n\r\nexport default updateProfile;\r\n"],"file":"updateProfile.spec.js"}