{"version":3,"sources":["../../../server/tests/queries/deleteMessage.spec.js"],"names":["expect","chai","use","chaiHttp","deleteMessage","Message","deleteMany","it","done","message","MessagesValues","validMessage","save","request","server","_id","set","VerifiedToken","noTokenProvided","end","err","res","to","be","have","status","body","property","validToken"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,M,GAAWC,gB,CAAXD,M;;AACRC,iBAAKC,GAAL,CAASC,oBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B;AACA;AACA;AACA,8FAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,oBAAQC,UAAR,CAAmB,EAAnB,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAGAC,EAAAA,EAAE,CAAC,iEAAD,EAAoE,UAACC,IAAD,EAAU;AAC9E,QAAMC,OAAO,GAAG,IAAIJ,mBAAJ,CAAYK,oBAAeC,YAA3B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAX,qBACGY,OADH,CACWC,iBADX,YAEU,kBAAkBL,OAAO,CAACM,GAFpC,EAGGC,GAHH,CAGOC,oBAAcC,eAHrB,EAIGC,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBrB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAvB,MAAAA,MAAM,CAACqB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAzB,MAAAA,MAAM,CAACqB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,SAAlC,EAA6C,eAA7C;AACAnB,MAAAA,IAAI;AACL,KATH;AAUD,GAbC,CAAF;AAcAD,EAAAA,EAAE,CAAC,uEAAD,EAA0E,UAACC,IAAD,EAAU;AACpFP,qBACGY,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,GAHH,CAGOC,oBAAcW,UAHrB,EAIGT,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBrB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAvB,MAAAA,MAAM,CAACqB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAzB,MAAAA,MAAM,CAACqB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CAAkC,OAAlC,EAA2C,WAA3C;AACAnB,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF;AAYAD,EAAAA,EAAE,CAAC,iDAAD,EAAoD,UAACC,IAAD,EAAU;AAC9D,QAAMC,OAAO,GAAG,IAAIJ,mBAAJ,CAAYK,oBAAeC,YAA3B,CAAhB;AACAF,IAAAA,OAAO,CAACG,IAAR;;AACAX,qBACGY,OADH,CACWC,iBADX,mCAE0BL,OAAO,CAACM,GAFlC,QAGGC,GAHH,CAGOC,oBAAcW,UAHrB,EAIGT,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBrB,MAAAA,MAAM,CAACoB,GAAD,CAAN,CAAYE,EAAZ,CAAeC,EAAf;AACAvB,MAAAA,MAAM,CAACqB,GAAD,CAAN,CAAYC,EAAZ,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAzB,MAAAA,MAAM,CAACqB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBE,IAApB,CAAyBG,QAAzB,CACE,SADF,EAEE,8BAFF;AAIAnB,MAAAA,IAAI;AACL,KAZH;AAaD,GAhBC,CAAF;AAiBD,CAlDD;;eAoDeJ,a","sourcesContent":["import chai from \"chai\";\r\nimport { afterEach, beforeEach } from \"mocha\";\r\n\r\nimport chaiHttp from \"chai-http\";\r\nimport server from \"../../index\";\r\nimport Message from \"../../models/Message\";\r\nimport VerifiedToken from \"../asset/article\";\r\nimport MessagesValues from \"../asset/queries\";\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst deleteMessage = () => {\r\n  // beforeEach(async () => {\r\n  //   await Message.deleteMany({});\r\n  // });\r\n  afterEach(async () => {\r\n    await Message.deleteMany({});\r\n  });\r\n  it(\"should not able to delete message if there is no token provided\", (done) => {\r\n    const message = new Message(MessagesValues.validMessage);\r\n    message.save();\r\n    chai\r\n      .request(server)\r\n      .delete(\"/api/queries/\" + message._id)\r\n      .set(VerifiedToken.noTokenProvided)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.have.property(\"message\", \"access denied\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should not be able to delete message if id is invalid or id not found\", (done) => {\r\n    chai\r\n      .request(server)\r\n      .delete(\"/api/queries/1\")\r\n      .set(VerifiedToken.validToken)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(404);\r\n        expect(res.body).to.have.property(\"error\", \"Not Found\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should be able to delete message if it is found\", (done) => {\r\n    const message = new Message(MessagesValues.validMessage);\r\n    message.save();\r\n    chai\r\n      .request(server)\r\n      .delete(`/api/queries/${message._id} `)\r\n      .set(VerifiedToken.validToken)\r\n      .end((err, res) => {\r\n        expect(err).to.be.null;\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.have.property(\r\n          \"message\",\r\n          \"message deleted successfully\"\r\n        );\r\n        done();\r\n      });\r\n  });\r\n};\r\n\r\nexport default deleteMessage;\r\n"],"file":"deleteMessage.spec.js"}